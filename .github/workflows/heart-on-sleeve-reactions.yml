name: ❤️ Heart On Your Sleeve - Auto Reactions
on:
  schedule:
    - cron: '0 11 * * 1,3,5'  # Segunda, Quarta e Sexta às 11h
  workflow_dispatch:
    inputs:
      reaction_type:
        description: 'Type of reaction to add'
        required: false
        default: 'heart'
        type: choice
        options:
          - heart
          - rocket
          - thumbsup
          - eyes
          - tada
      target_type:
        description: 'Target type for reactions'
        required: false
        default: 'both'
        type: choice
        options:
          - issues
          - prs
          - both

jobs:
  add-reactions:
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: ❤️ Add Reactions for Heart On Your Sleeve Badge
      uses: actions/github-script@v7
      with:
        script: |
          const reactionType = '${{ github.event.inputs.reaction_type }}';
          const targetType = '${{ github.event.inputs.target_type }}';
          
          const reactions = ['heart', 'rocket', 'thumbsup', 'eyes', 'tada'];
          const selectedReaction = reactionType || reactions[Math.floor(Math.random() * reactions.length)];
          
          console.log(`❤️ Adding ${selectedReaction} reactions for Heart On Your Sleeve badge...`);
          
          // Function to add reaction to an item
          const addReaction = async (itemType, itemNumber) => {
            try {
              if (itemType === 'issue') {
                await github.rest.reactions.createForIssue({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: itemNumber,
                  content: selectedReaction
                });
              } else if (itemType === 'pull_request') {
                await github.rest.reactions.createForPullRequest({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: itemNumber,
                  content: selectedReaction
                });
              }
              return true;
            } catch (error) {
              console.log(`⚠️ Error adding reaction to ${itemType} #${itemNumber}:`, error.message);
              return false;
            }
          };
          
          let totalReactions = 0;
          let successfulReactions = 0;
          
          // Add reactions to issues
          if (targetType === 'issues' || targetType === 'both') {
            console.log('📋 Processing issues...');
            
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'all',
              per_page: 10
            });
            
            for (const issue of issues.data) {
              if (!issue.pull_request) { // Only issues, not PRs
                totalReactions++;
                const success = await addReaction('issue', issue.number);
                if (success) {
                  successfulReactions++;
                  console.log(`❤️ Added ${selectedReaction} reaction to issue #${issue.number}: "${issue.title}"`);
                }
              }
            }
          }
          
          // Add reactions to pull requests
          if (targetType === 'prs' || targetType === 'both') {
            console.log('🔀 Processing pull requests...');
            
            const pullRequests = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'all',
              per_page: 10
            });
            
            for (const pr of pullRequests.data) {
              totalReactions++;
              const success = await addReaction('pull_request', pr.number);
              if (success) {
                successfulReactions++;
                console.log(`❤️ Added ${selectedReaction} reaction to PR #${pr.number}: "${pr.title}"`);
              }
            }
          }
          
          console.log(`🎉 Heart On Your Sleeve badge progress:`);
          console.log(`✅ Successfully added ${successfulReactions}/${totalReactions} reactions`);
          console.log(`❤️ Reaction type used: ${selectedReaction}`);
          
          // Create a summary issue for tracking
          const summaryBody = `## ❤️ Heart On Your Sleeve Badge Progress Report
          
          **Date:** ${new Date().toISOString()}
          **Reaction Type:** ${selectedReaction}
          **Target Type:** ${targetType}
          
          ### 📊 Results
          - **Total items processed:** ${totalReactions}
          - **Successful reactions added:** ${successfulReactions}
          - **Success rate:** ${totalReactions > 0 ? Math.round((successfulReactions / totalReactions) * 100) : 0}%
          
          ### 🎯 Badge Impact
          - ❤️ **Heart On Your Sleeve:** +${successfulReactions} reactions toward badge requirement
          - 🎉 **Engagement:** Increased community interaction
          - 📈 **Activity:** Demonstrated active participation
          
          ### 💡 Tips for Heart On Your Sleeve Badge
          1. **React to issues and PRs** with emoji reactions
          2. **Use different reaction types** (heart, rocket, thumbsup, etc.)
          3. **Engage regularly** with community content
          4. **Show appreciation** for contributions
          
          ---
          *Report generated automatically for Heart On Your Sleeve badge tracking*`;
          
          try {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `❤️ Heart On Your Sleeve Progress - ${new Date().toLocaleDateString()}`,
              body: summaryBody,
              labels: ['heart-on-sleeve', 'badge-progress', 'automation']
            });
            
            console.log('📝 Created progress summary issue');
          } catch (error) {
            console.log('⚠️ Could not create summary issue:', error.message);
          }
          
    - name: 🎯 Badge Achievement Notification
      run: |
        echo "❤️ Heart On Your Sleeve badge requirements:"
        echo "✅ Added emoji reactions to issues and/or PRs"
        echo "✅ Demonstrated community engagement"
        echo "✅ Used proper reaction types (heart, rocket, thumbsup, etc.)"
        echo "🏆 Heart On Your Sleeve badge should be achieved with regular reactions!" 